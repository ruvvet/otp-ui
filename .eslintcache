[{"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\index.jsx":"1","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\reportWebVitals.js":"2","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\App.jsx":"3","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\index.js":"4","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\utils.js":"5","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Logout\\Logout.jsx":"6","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\profileSlice.js":"7","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\index.js":"8","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\index.js":"9","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Main\\index.js":"10","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\index.js":"11","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\Callback.jsx":"12","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\Login.jsx":"13","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Main\\Main.jsx":"14","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\PrivateRoute.jsx":"15","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\About\\About.jsx":"16","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\index.js":"17","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\Matches\\index.js":"18","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\index.js":"19","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\index.js":"20","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\index.js":"21","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\index.js":"22","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\index.js":"23","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\Footer.jsx":"24","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\Header.jsx":"25","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\Settings.jsx":"26","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\Display.jsx":"27","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\Profile.jsx":"28","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\Matches\\Matches.jsx":"29","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\Chat.jsx":"30","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\index.js":"31","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\lookup.js":"32","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\Boop.jsx":"33","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\index.js":"34","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\index.js":"35","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\Details.jsx":"36","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\Slide.jsx":"37","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\UploadPic\\UploadPic.jsx":"38","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\index.js":"39","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\ProfileCard.jsx":"40","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\matchSlice.js":"41","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\chatSlice.js":"42","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\index.js":"43","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\Chats.jsx":"44","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\index.js":"45","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\ChatButton.jsx":"46","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\MatchButton\\index.js":"47","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\MatchButton\\MatchButton.jsx":"48","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\index.js":"49","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\Spinner.jsx":"50"},{"size":713,"mtime":1611196489191,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"52"},{"size":1789,"mtime":1611343147034,"results":"54","hashOfConfig":"52"},{"size":382,"mtime":1611290467616,"results":"55","hashOfConfig":"52"},{"size":1005,"mtime":1611329943968,"results":"56","hashOfConfig":"52"},{"size":307,"mtime":1611166376590,"results":"57","hashOfConfig":"52"},{"size":2680,"mtime":1611289763353,"results":"58","hashOfConfig":"52"},{"size":62,"mtime":1610135153826,"results":"59","hashOfConfig":"52"},{"size":53,"mtime":1610135038980,"results":"60","hashOfConfig":"52"},{"size":50,"mtime":1610134565300,"results":"61","hashOfConfig":"52"},{"size":74,"mtime":1611174907736,"results":"62","hashOfConfig":"52"},{"size":1539,"mtime":1611291026214,"results":"63","hashOfConfig":"52"},{"size":5426,"mtime":1611175156080,"results":"64","hashOfConfig":"52"},{"size":3429,"mtime":1611342936552,"results":"65","hashOfConfig":"52"},{"size":512,"mtime":1611174929942,"results":"66","hashOfConfig":"52"},{"size":5274,"mtime":1611339368006,"results":"67","hashOfConfig":"52"},{"size":50,"mtime":1610401581422,"results":"68","hashOfConfig":"52"},{"size":59,"mtime":1611152641860,"results":"69","hashOfConfig":"52"},{"size":59,"mtime":1610140783087,"results":"70","hashOfConfig":"52"},{"size":56,"mtime":1610139644898,"results":"71","hashOfConfig":"52"},{"size":56,"mtime":1610137367445,"results":"72","hashOfConfig":"52"},{"size":62,"mtime":1610475525582,"results":"73","hashOfConfig":"52"},{"size":59,"mtime":1610645318503,"results":"74","hashOfConfig":"52"},{"size":3140,"mtime":1611342880082,"results":"75","hashOfConfig":"52"},{"size":2638,"mtime":1611342889558,"results":"76","hashOfConfig":"52"},{"size":6487,"mtime":1611343038214,"results":"77","hashOfConfig":"52"},{"size":2410,"mtime":1611342851056,"results":"78","hashOfConfig":"52"},{"size":4807,"mtime":1611282213093,"results":"79","hashOfConfig":"52"},{"size":748,"mtime":1611342952281,"results":"80","hashOfConfig":"52"},{"size":5786,"mtime":1611342764206,"results":"81","hashOfConfig":"52"},{"size":50,"mtime":1610134873748,"results":"82","hashOfConfig":"52"},{"size":6509,"mtime":1611329880996,"results":"83","hashOfConfig":"52"},{"size":894,"mtime":1610134873746,"results":"84","hashOfConfig":"52"},{"size":53,"mtime":1610469176023,"results":"85","hashOfConfig":"52"},{"size":59,"mtime":1610469392347,"results":"86","hashOfConfig":"52"},{"size":1004,"mtime":1611153497196,"results":"87","hashOfConfig":"52"},{"size":2043,"mtime":1610469577170,"results":"88","hashOfConfig":"52"},{"size":2233,"mtime":1611008924166,"results":"89","hashOfConfig":"52"},{"size":71,"mtime":1610142298871,"results":"90","hashOfConfig":"52"},{"size":5963,"mtime":1611175167770,"results":"91","hashOfConfig":"52"},{"size":492,"mtime":1611290358417,"results":"92","hashOfConfig":"52"},{"size":474,"mtime":1611290424312,"results":"93","hashOfConfig":"52"},{"size":53,"mtime":1611329083059,"results":"94","hashOfConfig":"52"},{"size":1611,"mtime":1611341955020,"results":"95","hashOfConfig":"52"},{"size":68,"mtime":1611329412172,"results":"96","hashOfConfig":"52"},{"size":2693,"mtime":1611338003310,"results":"97","hashOfConfig":"52"},{"size":71,"mtime":1611336813421,"results":"98","hashOfConfig":"52"},{"size":2452,"mtime":1611341410520,"results":"99","hashOfConfig":"52"},{"size":59,"mtime":1611074628165,"results":"100","hashOfConfig":"52"},{"size":195,"mtime":1611342525532,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1t8dozm",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"104"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\index.jsx",[],["216","217"],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\reportWebVitals.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\App.jsx",["218","219","220","221","222","223","224"],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\utils.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Logout\\Logout.jsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\profileSlice.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Main\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\Callback.jsx",["225","226"],"import React, { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport OTPRequest from '../../utils';\r\n\r\nexport default function Callback() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // get the code from the url query\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const code = searchParams.get('code');\r\n\r\n    console.log('code', code);\r\n\r\n    // if a code is returned\r\n    if (code) {\r\n      // make a call to the api endpoint to exchange the code for the google_id\r\n\r\n      const login = async () => {\r\n        const response = await OTPRequest(\r\n          '/authorize/exchange',\r\n          {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ code }),\r\n          },\r\n          true\r\n        );\r\n\r\n        // we save the google_id to the local storage\r\n        // this is their identifier\r\n        // and maintains the session\r\n        const token = await response.json();\r\n        localStorage.setItem('OTP_TOKEN', token);\r\n\r\n        // if 201 status, they are a new user\r\n        if (response.status === 201) {\r\n          history.push('/settings');\r\n        } else {\r\n\r\n        // else push to main page\r\n        history.push('/');\r\n        }\r\n      };\r\n\r\n      login();\r\n    } else {\r\n      // they did not authorize/we did not get a code back and they need to relogin\r\n      history.push('/login');\r\n    }\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\Login.jsx",["227","228","229","230","231","232","233"],"import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  StepButton,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport OTPRequest, { API } from '../../utils';\r\nimport './login.css';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nexport default function Login() {\r\n  const [dialog, setDialog] = useState(false);\r\n  const [disableButton, setDisableButton] = useState(true);\r\n\r\n  const actions = [\r\n    { item: 'Login w/ Discord', icon: './img/discord (1).png' },\r\n    { item: 'Create your Profile', icon: './img/profile-user.png' },\r\n    { item: 'Connect w/ Siege Players', icon: './img/like.png' },\r\n    { item: 'Make Friends, Have Fun', icon: './img/high-five.png' },\r\n  ];\r\n\r\n  const generate = () => {\r\n    return actions.map((a, i) => (\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <img src={a.icon} />\r\n        </ListItemIcon>\r\n        <ListItemText primary primary={a.item} />\r\n      </ListItem>\r\n    ));\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setDialog(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleAccept = () => {\r\n    window.location.href = `${API}/authorize`;\r\n  };\r\n\r\n  return (\r\n    <Container className=\"login-container\" maxWidth=\"sm\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        style={{ height: '50%' }}\r\n      >\r\n        <Grid item xs>\r\n          <Typography variant=\"h4\">FInd your one true party.</Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n            You're not thirsty, you're just lonely.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs style={{width: \"100%\"}}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"login-btn\"\r\n            startIcon={\r\n              <img\r\n                className=\"logo\"\r\n                src=\"./img/otp.png\"\r\n                style={{ height: 50, width: 50 }}\r\n              />\r\n            }\r\n            onClick={handleDialogOpen}\r\n            style={{ backgroundColor: '#FFFFFF50' }}\r\n            fullWidth\r\n          />\r\n          <Dialog\r\n            open={dialog}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                <Typography variant=\"body2\">\r\n                  Please read the terms of service carefully before using the\r\n                  OTP web-app operated by ruvvet.com.\r\n                </Typography>\r\n                <Typography variant=\"h6\">Conditions of use </Typography>\r\n                <Typography variant=\"body2\">\r\n                  By using this website, you certify that you have read and\r\n                  reviewed this Agreement and that you agree to comply with its\r\n                  terms. If you do not want to be bound by the terms of this\r\n                  Agreement, you are advised to leave the website accordingly.\r\n                  OTP only grants use and access of this website, its products,\r\n                  and its services to those who have accepted its terms.\r\n                </Typography>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    icon={<FavoriteBorder />}\r\n                    checkedIcon={<Favorite />}\r\n                    // onChange={(e) => handleAccept()}\r\n                    onChange={(e) =>\r\n                      setDisableButton(disableButton ? false : true)\r\n                    }\r\n                  />\r\n                }\r\n                label=\"I accept and agree to the Terms of Use\"\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                autoFocus\r\n                disabled={disableButton}\r\n                href={`${API}/authorize`}\r\n              >\r\n                Login\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Grid>\r\n\r\n        {/*\r\n        <Button\r\n          variant=\"contained\"\r\n          className=\"login-btn\"\r\n          startIcon={\r\n            <img\r\n              className=\"logo\"\r\n              src=\"./img/otp.png\"\r\n              style={{ height: 50, width: 50 }}\r\n            />\r\n          }\r\n          href={`${API}/authorize`}\r\n          style={{ backgroundColor: '#FFFFFF50' }}\r\n          fullWidth\r\n        /> */}\r\n\r\n        <Grid item xs>\r\n          <Paper elevation={3}>\r\n            <List>{generate()}</List>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs className=\"login-disclaimer\">\r\n          <Typography variant=\"caption\">\r\n            Not affiliated with Ubisoft. All product names, logos, and brands\r\n            are property of their respective owners. All company, product and\r\n            service names used in this website are for identification purposes\r\n            only.\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Main\\Main.jsx",["234","235"],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\PrivateRoute.jsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\About\\About.jsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\Matches\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\Footer.jsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\Header.jsx",["236"],"import { Badge, Container, Grid, IconButton, Tooltip } from '@material-ui/core';\r\nimport NotificationsRoundedIcon from '@material-ui/icons/NotificationsRounded';\r\nimport ReplyRoundedIcon from '@material-ui/icons/ReplyRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Boop from '../../effects/Boop';\r\nimport './header.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Header() {\r\n  const location = useLocation();\r\n\r\n  const [back, setBack] = useState();\r\n\r\n  const matchNotification = useSelector(\r\n    (state) => state.match.matchNotification\r\n  );\r\n\r\n  useEffect(() => {\r\n    setBack(window.location.pathname === '/');\r\n  }, [location]);\r\n\r\n  return (\r\n    <Container className=\"header-container\" maxWidth=\"sm\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Boop rotation={10} timing={150}>\r\n          <Tooltip title={back ? 'Settings' : 'Main'} style={{ padding: 0 }}>\r\n            <Link to={back ? '/settings' : '/'}>\r\n              <IconButton>\r\n                {back ? (\r\n                  <SettingsRoundedIcon\r\n                    className=\"icon\"\r\n                    style={{ padding: 10, fontSize: '2rem', color: '#dedede' }}\r\n                  />\r\n                ) : (\r\n                  <ReplyRoundedIcon\r\n                    className=\"icon\"\r\n                    style={{ padding: 10, fontSize: '2rem', color: '#dedede' }}\r\n                  />\r\n                )}\r\n              </IconButton>\r\n            </Link>\r\n          </Tooltip>\r\n        </Boop>\r\n\r\n        <div>\r\n          <Tooltip title=\"About OTP\" style={{ padding: 0 }}>\r\n            <Link to=\"/about\">\r\n              <img src=\"../img/otp.png\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n\r\n        <Boop rotation={10} timing={150}>\r\n          <Tooltip title=\"Notifications\" style={{ padding: 0 }}>\r\n            <IconButton>\r\n              <Badge\r\n                badgeContent={matchNotification}\r\n                color=\"primary\"\r\n                className=\"badge\"\r\n                showZero\r\n                max={99}\r\n                overlap=\"circle\"\r\n              >\r\n                <NotificationsRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{ padding: 10, fontSize: '2rem', color: '#e6c714' }}\r\n                />\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Boop>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\Settings.jsx",["237","238","239","240","241","242"],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\Display.jsx",["243"],"import { Container, Grid } from '@material-ui/core';\r\nimport React, { createRef, useMemo, useState, useEffect } from 'react';\r\nimport ProfileCard from '../ProfileCard';\r\nimport './display.css';\r\nimport OTPRequest from '../../../utils';\r\nimport Spinner from '../../utility/Spinner';\r\n\r\nexport default function Display() {\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    const getProfiles = async () => {\r\n      const response = await OTPRequest('/swipe', {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      }).catch(() => {\r\n        setError(true);\r\n        return null;\r\n      });\r\n\r\n      if (response) {\r\n        setProfiles(response.profiles);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    getProfiles();\r\n  }, []);\r\n\r\n  const childRefs = useMemo(\r\n    () => ({ 1: createRef(), 2: createRef(), 3: createRef() }),\r\n    []\r\n  );\r\n\r\n  const swiped = async (direction, id) => {\r\n    console.log('removing: ' + id);\r\n    console.log(direction);\r\n    // make api call to update database\r\n    if (direction === 'right') {\r\n\r\n      await OTPRequest('/swipe', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({swipeId:id}),\r\n      });\r\n    }\r\n  };\r\n\r\n  const outOfFrame = (id) => {\r\n    console.log(id, ' out of frame, removed from list');\r\n    setIndex(index + 1);\r\n  };\r\n\r\n  const swipeButton = async (direction) => {\r\n    await childRefs[profiles[index].id].current.swipe(direction);\r\n  };\r\n\r\n  const renderCards = () => {\r\n    if (profiles.length > 0) {\r\n      return profiles\r\n        .slice(index)\r\n        .reverse()\r\n        .map((profile, i) => (\r\n          <div className=\"swipe\">\r\n            <ProfileCard\r\n              ref={childRefs[profile.id]}\r\n              key={profile.discordId}\r\n              profile={profile}\r\n              swiped={swiped}\r\n              outOfFrame={outOfFrame}\r\n              swipeButton={swipeButton}\r\n            />\r\n          </div>\r\n        ));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"card-container\" maxWidth=\"sm\">\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        {loading? <Spinner /> : renderCards()}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\Profile.jsx",["244","245","246","247","248"],"import {\r\n  Box,\r\n  Card,\r\n  CardMedia,\r\n  Grid,\r\n  IconButton,\r\n  MobileStepper,\r\n} from '@material-ui/core';\r\nimport ArrowLeftRoundedIcon from '@material-ui/icons/ArrowLeftRounded';\r\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\r\nimport UnfoldMoreRoundedIcon from '@material-ui/icons/UnfoldMoreRounded';\r\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\r\nimport React, { useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport Details from '../../display/Details';\r\nimport Slide from '../../effects/Slide';\r\nimport './profile.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { ranks, att, def } from '../../../lookup';\r\n\r\nexport default function Profile() {\r\n  const displayName = useSelector((state) => state.profile.displayName);\r\n\r\n  const rank = useSelector((state) => state.profile.rank);\r\n  const pics = useSelector((state) => state.profile.pics);\r\n  const socials = useSelector((state) => state.profile.socials);\r\n  const mainAtt = useSelector((state) => state.profile.mainAtt);\r\n  const mainDef = useSelector((state) => state.profile.mainDef);\r\n\r\nconst [viewDetails, setViewDetails] = useState(false);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [currentImgIndex, setCurrentImgIndex] = useState(0);\r\n  const [rankIcon, setRankIcon] = useState('');\r\n  const [attIcon, setAttIcon] = useState('');\r\n  const [defIcon, setDefIcon] = useState('');\r\n\r\n  //TODO: click away, setViewDetails = false;\r\n\r\n  useEffect(() => {\r\n    const rankIcon = ranks.find((r) => r.rank === rank);\r\n    setRankIcon(rankIcon ? rankIcon.img : '');\r\n\r\n    const attMain = att.find((op) => op.operator === mainAtt);\r\n    setAttIcon(attMain ? attMain.img : '');\r\n\r\n    const defMain = def.find((op) => op.operator === mainDef);\r\n    setDefIcon(defMain ? defMain.img : '');\r\n  }, []);\r\n\r\n  const handleNext = () => {\r\n    setCurrentImgIndex(currentImgIndex + 1);\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setCurrentImgIndex(currentImgIndex - 1);\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const numPics = Object.values(pics).filter(Boolean).length;\r\n\r\n  return (\r\n    <TinderCard\r\n      className=\"profile-card\"\r\n      id=\"profile-card\"\r\n      preventSwipe={['up', 'down', 'left', 'right']}\r\n    >\r\n      <Card className=\"card\">\r\n        <MobileStepper\r\n          className=\"profile-stepper\"\r\n          variant=\"dots\"\r\n          steps={numPics}\r\n          position=\"static\"\r\n          activeStep={activeStep}\r\n          nextButton={\r\n            <IconButton\r\n              onClick={handleNext}\r\n              disabled={activeStep === numPics - 1}\r\n            >\r\n              <ArrowRightRoundedIcon className=\"icon\" fontSize=\"large\" />\r\n            </IconButton>\r\n          }\r\n          backButton={\r\n            <IconButton onClick={handleBack} disabled={activeStep === 0}>\r\n              <ArrowLeftRoundedIcon className=\"icon\" fontSize=\"large\" />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardMedia\r\n          className=\"profile-img\"\r\n          component=\"img\"\r\n          image={Object.values(pics)[currentImgIndex]}\r\n        />\r\n        <Grid container direction=\"columns\" className=\"content\">\r\n          <Slide isVisible={isVisible}>\r\n            <Details\r\n            name={displayName}\r\n                rank={rank}\r\n                socials={socials}\r\n                rankIcon={rankIcon}\r\n                attIcon={attIcon}\r\n                defIcon={defIcon}/>\r\n          </Slide>\r\n\r\n          <Box className=\"title\">\r\n            <div>\r\n              {isVisible || (\r\n                <>\r\n                  <>\r\n                    <img className=\"rank-profile-icon\" src={rankIcon} />\r\n                    {displayName.toUpperCase()}, {rank}\r\n                    {/* <div>\r\n                    <StarBorderRoundedIcon />\r\n                    Profile Preview\r\n                  </div> */}\r\n                  </>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Box>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            className=\"buttons\"\r\n          >\r\n            <IconButton>\r\n              <UnfoldMoreRoundedIcon\r\n                className=\"icon\"\r\n                style={{\r\n                  padding: 5,\r\n                  fontSize: '3rem',\r\n                  color: '#20639B',\r\n                  backgroundColor: 'transparent',\r\n                }}\r\n                onClick={() => setIsVisible(!isVisible)}\r\n              />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </TinderCard>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\Matches\\Matches.jsx",["249","250"],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\Chat.jsx",["251","252","253","254"],"import {\r\n  TextField,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  Avatar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport './chat.css';\r\nimport io from 'socket.io-client';\r\nimport { useParams } from 'react-router-dom';\r\nimport OTPRequest, { API } from '../../../utils';\r\nimport Spinner from '../../utility/Spinner'\r\n\r\nexport default function Chat() {\r\n  const { id } = useParams();\r\n\r\n  console.log('param id', id);\r\n\r\n  const [socket, setSocket] = useState();\r\n  const [tempId, setTempId] = useState();\r\n  const [convo, setConvo] = useState([]);\r\n  const [msg, setMsg] = useState('');\r\n  const [convoHistory, setConvoHistory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  //TODO - send on enter\r\n\r\n  useEffect(() => {\r\n    const getChatHistory = async () => {\r\n      const response = await OTPRequest(`/chat/${'1'}`, {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      }).catch(() => {\r\n        setError(true);\r\n        return null;\r\n      });\r\n\r\n      if (response) {\r\n        setConvo(\r\n          response.map((chatlog, i) => {\r\n            if (chatlog.receiver === 1) {\r\n              return {\r\n                user: chatlog.receiver,\r\n                msg: chatlog.msg,\r\n                timestamp: new Date(chatlog.date).toDateString(),\r\n              };\r\n            } else {\r\n              return {\r\n                user: chatlog.sender,\r\n                msg: chatlog.msg,\r\n                timestamp: new Date(chatlog.date).toDateString(),\r\n              };\r\n            }\r\n          })\r\n        );\r\n\r\n        // setConvoHistory(response);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getChatHistory();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // conect to socket\r\n    const socket = io(API);\r\n\r\n    // set the socket with the socket instance\r\n    setSocket(socket);\r\n\r\n    //socket instance.emit('event name', message being passed back)\r\n    socket.emit('sendMyId', tempId);\r\n\r\n    socket.on('incomingMsg', (senderId, msg) => {\r\n      setConvo((prevConvo) => [\r\n        ...prevConvo,\r\n        { user: senderId, msg, timestamp: new Date().toDateString() },\r\n      ]);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [tempId]);\r\n\r\n  const handleSendMsg = () => {\r\n    if (msg) {\r\n      setConvo([\r\n        ...convo,\r\n        { user: tempId, msg, timestamp: new Date().toDateString() },\r\n      ]);\r\n      setMsg('');\r\n\r\n      socket.emit('outgoingMsg', tempId, id, msg);\r\n    } else {\r\n      console.log('hello');\r\n    }\r\n  };\r\n\r\n  const renderChat = () => {\r\n    return convo.map((c, i) => {\r\n      if (c.user === tempId) {\r\n        return (\r\n          <Grid\r\n            key={`chat${i}`}\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Avatar src=\"#\">{c.user}</Avatar>\r\n            <Box\r\n              component=\"span\"\r\n              m={1}\r\n              p={1}\r\n              style={{\r\n                background: '#FFFFFF70',\r\n              }}\r\n              className=\"chat-message\"\r\n            >\r\n              {c.msg}\r\n            </Box>\r\n            <Box className=\"chat-timestamp\">{c.timestamp}</Box>\r\n          </Grid>\r\n        );\r\n      } else {\r\n        return (\r\n          <Grid\r\n            key={`chat${i}`}\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Box className=\"chat-timestamp\">{c.timestamp}</Box>\r\n            <Box\r\n              component=\"span\"\r\n              m={1}\r\n              p={1}\r\n              style={{\r\n                background: '#00000030',\r\n              }}\r\n              className=\"chat-message\"\r\n            >\r\n              {c.msg}\r\n            </Box>\r\n            <Avatar src=\"#\">{c.user}</Avatar>\r\n          </Grid>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"chat-container\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          My#\r\n          <input type=\"number\" onChange={(e) => setTempId(e.target.value)} />\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          className=\"chat-box scrollbar2\"\r\n        >\r\n          {loading ? <Spinner /> : renderChat()}\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          className=\"chat-send\"\r\n        >\r\n          {/* <input type=\"number\" value = {number} onChange={(e)=>setNumber(e.target.value)}/> */}\r\n\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"filled-multiline-static\"\r\n              label=\"Type here...\"\r\n              multiline\r\n              placeholder=\"Start Chatting\"\r\n              variant=\"filled\"\r\n              value={msg}\r\n              onChange={(e) => setMsg(e.target.value)}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <IconButton onClick={handleSendMsg}>\r\n              <SendRoundedIcon\r\n                style={{\r\n                  padding: 0,\r\n                  fontSize: '2rem',\r\n                  color: '#dedede',\r\n                  borderRadius: 0,\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\lookup.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\Boop.jsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\Details.jsx",["255","256","257","258","259"],"import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { socialMedia } from '../../../lookup';\r\nimport './details.css';\r\n\r\nexport default function Details({\r\n  name,\r\n  rank,\r\n  socials,\r\n  rankIcon,\r\n  attIcon,\r\n  defIcon,\r\n}) {\r\n  const renderSocials = () => {\r\n    return socialMedia.reduce((final, s) => {\r\n      if (socials[s.site]) {\r\n        final.push(\r\n          <div>\r\n            <a href={`https://www.${s.url}${socials[s.site]}`} target=\"_blank\">\r\n              <img src={s.img} />\r\n            </a>\r\n          </div>\r\n        );\r\n      }\r\n      return final;\r\n    }, []);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"details-container scrollbar\">\r\n      <div>\r\n        {' '}\r\n        <img className=\"rank-profile-icon\" src={rankIcon} />\r\n        {name.toUpperCase()}, {rank}\r\n      </div>\r\n      <div className=\"mains\">\r\n        <img src={attIcon} />\r\n        <img src={defIcon} />\r\n      </div>\r\n      <div className=\"social\">{renderSocials()}</div>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\Slide.jsx",["260"],"import React, { useRef, useState } from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import { bool, node } from 'prop-types';\r\nimport { useTransition, animated } from 'react-spring';\r\n\r\nconst visibleStyle = { height: 'auto', opacity: 1, overflow: 'visible' };\r\nconst hiddenStyle = { opacity: 0, height: 0, overflow: 'hidden' };\r\n\r\nfunction getElementHeight(ref) {\r\n  return ref.current ? ref.current.getBoundingClientRect().height : 0;\r\n}\r\n\r\nexport default function Slide({ isVisible, children, forceSlideIn }) {\r\n  const isVisibleOnMount = useRef(isVisible && !forceSlideIn);\r\n  const containerRef = useRef(null);\r\n  const innerRef = useRef(null);\r\n\r\n  const transitions = useTransition(isVisible, null, {\r\n    enter: () => async (next, cancel) => {\r\n      const height = getElementHeight(innerRef);\r\n\r\n      cancel();\r\n\r\n      await next({ height, opacity: 1, overflow: 'hidden' });\r\n      await next(visibleStyle);\r\n    },\r\n    leave: () => async (next, cancel) => {\r\n      const height = getElementHeight(containerRef);\r\n\r\n      cancel();\r\n\r\n      await next({ height, overflow: 'hidden' });\r\n      await next(hiddenStyle);\r\n\r\n      isVisibleOnMount.current = false;\r\n    },\r\n    from: isVisibleOnMount.current ? visibleStyle : hiddenStyle,\r\n    unique: true,\r\n  });\r\n\r\n  return transitions.map(({ item: show, props: springProps, key }) => {\r\n    if (show) {\r\n      return (\r\n        <animated.div ref={containerRef} key={key} style={springProps}>\r\n          <div ref={innerRef}>{children}</div>\r\n        </animated.div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  });\r\n}\r\n\r\n// SlideToggleContent.defaultProps = {\r\n//   forceSlideIn: false,\r\n// };\r\n\r\n// SlideToggleContent.propTypes = {\r\n//   /** Should the component mount it's childeren and slide down */\r\n//   isVisible: bool.isRequired,\r\n//   /** Makes sure the component always slides in on mount. Otherwise it will be immediately visible if isVisible is true on mount */\r\n//   forceSlideIn: bool,\r\n//   /** The slidable content elements */\r\n//   children: node.isRequired,\r\n// };\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\UploadPic\\UploadPic.jsx",["261","262","263","264","265"],"import { Grid, IconButton, Snackbar } from '@material-ui/core';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport React, { useState } from 'react';\r\nimport OTPRequest from '../../../utils';\r\nimport './uploadpic.css';\r\n\r\nexport default function UploadPic({ picKey, pic }) {\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(false);\r\n  };\r\n\r\n  const handleInput = async (e, picKey) => {\r\n    setSnackbar(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('pic', e.target.files[0]);\r\n    formData.append('picKey', picKey);\r\n\r\n    await OTPRequest('/profile/pics', {\r\n      method: 'PUT',\r\n      body: formData,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs className=\"upload-pic-item\">\r\n      {pic ? (\r\n        <>\r\n          <img src={pic} />\r\n          <div className=\"float-input\">\r\n            <input\r\n              accept=\"image/*\"\r\n              id={picKey}\r\n              type=\"file\"\r\n              style={{ display: 'none' }}\r\n              onChange={(e) => handleInput(e, picKey)}\r\n            />\r\n            <label htmlFor={picKey}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                className=\"input-icon\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            accept=\"image/*\"\r\n            id={picKey}\r\n            type=\"file\"\r\n            style={{ display: 'none' }}\r\n            onChange={(e) => handleInput(e, picKey)}\r\n          />\r\n          <label htmlFor={picKey}>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </label>\r\n        </div>\r\n      )}\r\n\r\n      <Snackbar\r\n        open={snackbar}\r\n        onClose={handleCloseSnackbar}\r\n        autoHideDuration={3000}\r\n        message=\"Saved!\"\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\ProfileCard.jsx",["266","267","268","269","270"],"import {\r\n  Box,\r\n  Card,\r\n  CardMedia,\r\n  Grid,\r\n  IconButton,\r\n  MobileStepper,\r\n} from '@material-ui/core';\r\nimport ArrowLeftRoundedIcon from '@material-ui/icons/ArrowLeftRounded';\r\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\r\nimport UnfoldMoreRoundedIcon from '@material-ui/icons/UnfoldMoreRounded';\r\nimport React, { forwardRef, useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport Slide from '../../effects/Slide';\r\nimport Details from '../Details';\r\nimport './profilecard.css';\r\nimport { ranks, att, def, socialMedia } from '../../../lookup';\r\nimport { setSocials } from '../../../store/profileSlice';\r\nimport { checkPropTypes } from 'prop-types';\r\n\r\nexport default forwardRef(\r\n  ({ profile, swiped, outOfFrame, swipeButton }, ref) => {\r\n    const [viewDetails, setViewDetails] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [currentImgIndex, setCurrentImgIndex] = useState(0);\r\n    const [rankIcon, setRankIcon] = useState('');\r\n\r\n    const [attIcon, setAttIcon] = useState('');\r\n    const [defIcon, setDefIcon] = useState('');\r\n    const [pics, setPics] = useState([]);\r\n    const [socials, setSocials] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const rankIcon = ranks.find((r) => r.rank === profile.rank);\r\n      setRankIcon(rankIcon ? rankIcon.img : '');\r\n\r\n      const attMain = att.find((op) => op.operator === profile.att);\r\n      setAttIcon(attMain ? attMain.img : '');\r\n\r\n      const defMain = def.find((op) => op.operator === profile.def);\r\n      setDefIcon(defMain ? defMain.img : '');\r\n\r\n      setPics(profile.pictures.map((pic, i) => pic.url));\r\n\r\n      setSocials(\r\n        socialMedia.reduce((final, s) => {\r\n          if (profile[s.site]) {\r\n            final[s.site] = profile[s.site];\r\n          }\r\n          return final;\r\n        }, {})\r\n      );\r\n    }, [profile]);\r\n\r\n    //TODO: click away, setViewDetails = false;\r\n\r\n    const handleNext = () => {\r\n      setCurrentImgIndex(currentImgIndex + 1);\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n      setCurrentImgIndex(currentImgIndex - 1);\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    return (\r\n      <TinderCard\r\n        className=\"profile-card\"\r\n        id=\"profile-card\"\r\n        onSwipe={(dir) => swiped(dir, profile.discordId)}\r\n        onCardLeftScreen={() => outOfFrame(profile.discordId)}\r\n        preventSwipe={['up', 'down']}\r\n        ref={ref}\r\n      >\r\n        <Card className=\"card\">\r\n          <MobileStepper\r\n            className=\"profile-stepper\"\r\n            variant=\"dots\"\r\n            steps={3}\r\n            position=\"static\"\r\n            activeStep={activeStep}\r\n            nextButton={\r\n              <IconButton\r\n                onClick={handleNext}\r\n                disabled={activeStep === pics.length - 1}\r\n              >\r\n                <ArrowRightRoundedIcon className=\"icon\" fontSize=\"large\" />\r\n              </IconButton>\r\n            }\r\n            backButton={\r\n              <IconButton onClick={handleBack} disabled={activeStep === 0}>\r\n                <ArrowLeftRoundedIcon className=\"icon\" fontSize=\"large\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n\r\n          <CardMedia\r\n            className=\"profile-img\"\r\n            component=\"img\"\r\n            image={pics[currentImgIndex]}\r\n          />\r\n          <Grid container direction=\"columns\" className=\"content\">\r\n            <Slide isVisible={isVisible}>\r\n              <Details\r\n                name={profile.displayName || profile.discordUserName}\r\n                rank={profile.rank}\r\n                socials={socials}\r\n                rankIcon={rankIcon}\r\n                attIcon={attIcon}\r\n                defIcon={defIcon}\r\n              />\r\n            </Slide>\r\n\r\n            <Box className=\"title\">\r\n              <div>\r\n                {isVisible || (\r\n                  <>\r\n                    <img className=\"rank-profile-icon\" src={rankIcon} />\r\n                    {profile.displayName.toUpperCase()}, {profile.rank}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Box>\r\n\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              className=\"buttons\"\r\n            >\r\n              <IconButton onClick={() => swipeButton('left')}>\r\n                <HighlightOffRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{\r\n                    padding: 1,\r\n                    fontSize: '2rem',\r\n                    color: '#FA4659',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n\r\n                />\r\n              </IconButton>\r\n\r\n              <IconButton  onClick={() => setIsVisible(!isVisible)}>\r\n                <UnfoldMoreRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{\r\n                    padding: 5,\r\n                    fontSize: '3rem',\r\n                    color: '#20639B',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n\r\n                />\r\n              </IconButton>\r\n              <IconButton onClick={() => swipeButton('right')}>\r\n                <CheckCircleOutlineRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{\r\n                    padding: 1,\r\n                    fontSize: '2rem',\r\n                    color: '#2EB872',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n\r\n                />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </TinderCard>\r\n    );\r\n  }\r\n);\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\matchSlice.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\chatSlice.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\Chats.jsx",["271","272","273","274","275","276","277","278"],"import { Container, Grid } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ChatButton from '../ChatButton';\r\nimport './chats.css';\r\nimport io from 'socket.io-client';\r\nimport { API } from '../../../utils';\r\n\r\nexport default function Chats() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n  const [socket, setSocket] = useState();\r\n\r\n  const chats = useSelector((state) => state.chat.chats);\r\n  \r\n  useEffect(() => {\r\n    // conect to socket\r\n    const socket = io(API);\r\n\r\n    // set the socket with the socket instance\r\n    setSocket(socket);\r\n\r\n    //socket instance.emit('event name', message being passed back)\r\n    socket.emit('sendMyId', '1');\r\n\r\n    const checkOnline = [];\r\n\r\n    chats.map((c, i) => {\r\n      socket.emit('checkOnline', c, '1');\r\n\r\n      socket.on('confirmOnline', (buddyId, onlineStatus) => {\r\n        if (onlineStatus) {\r\n          console.log('hi');\r\n        }\r\n      });\r\n    });\r\n\r\n    socket.on('', (senderId, msg) => {});\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const renderChats = () => {\r\n    return chats.map((chat, i) => (\r\n      <ChatButton key={`chatBuddy${i}`} chatBuddy={chat} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"messages-container scrollbar2\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        className=\"messages-wrapper\"\r\n      >\r\n        {renderChats()}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\ChatButton.jsx",["279","280"],"import {\r\n    Avatar,\r\n    Badge,\r\n    Grid,\r\n    IconButton,\r\n    Paper,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './chatbutton.css';\r\nimport {discordAvatar} from '../../../utils'\r\n\r\nexport default function ChatButton({ chatBuddy }) {\r\n\r\n  return (\r\n    <Paper elevation={0} className=\"message-match\">\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      <Grid item xs>\r\n        <Badge\r\n          className=\"online-badge\"\r\n          badgeContent={100}\r\n          color=\"primary\"\r\n          className=\"badge\"\r\n          variant=\"dot\"\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          overlap=\"circle\"\r\n          invisible={false}\r\n        >\r\n          <Avatar alt={chatBuddy.receiver_displayName || chatBuddy.receiver_discordUsername} src={discordAvatar(chatBuddy.receiver_discordId, chatBuddy.receiver_discordAvatar)} />\r\n        </Badge>\r\n      </Grid>\r\n      <Grid item xs>\r\n        {chatBuddy.receiver_displayName || chatBuddy.receiver_discordUsername}\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Tooltip title=\"Send a message!\" style={{ padding: 0 }}>\r\n          <Link to={`/messages/${chatBuddy.receiver_discordId}`}>\r\n            <IconButton\r\n              className=\"icon\"\r\n              // href={`/messages/${match.name}`}\r\n            >\r\n              <ChatRoundedIcon\r\n                className=\"icon\"\r\n                color=\"primary\"\r\n                style={{ padding: 5, fontSize: '2rem' }}\r\n              />\r\n            </IconButton>\r\n          </Link>\r\n        </Tooltip>\r\n        <Tooltip\r\n          title=\"Send Discord Friend Request!\"\r\n          style={{ padding: 0 }}\r\n        >\r\n          <IconButton\r\n            className=\"icon\"\r\n            href={`https://discordapp.com/users/${chatBuddy.receiver_discordId}`}\r\n            target=\"_blank\"\r\n          >\r\n            <img\r\n              style={{\r\n                height: 30,\r\n                width: 30,\r\n                padding: 5,\r\n                fontSize: '2rem',\r\n                color: '#dedede',\r\n              }}\r\n              src=\"./img/discord.png\"\r\n            />\r\n          </IconButton>\r\n        </Tooltip>\r\n\r\n        {/* <Chip\r\n        icon={\r\n          <img style={{ height: 20, width: 20 }} src=\"./img/discord.png\" />\r\n        }\r\n        label=\"Send\"\r\n        clickable\r\n        color=\"primary\"\r\n        onClick={() =>\r\n          window.open(`https://discordapp.com/users/${match.id}`)\r\n        }\r\n      /> */}\r\n      </Grid>\r\n    </Grid>\r\n  </Paper>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\MatchButton\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\match\\MatchButton\\MatchButton.jsx",["281","282","283","284","285","286"],"import {\r\n  Avatar,\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { discordAvatar } from '../../../utils';\r\nimport './matchbutton.css';\r\nimport { att, def, ranks, socialMedia } from '../../../lookup';\r\n\r\nexport default function MatchButton({ match }) {\r\n  const rankIcon = (userrank) => {\r\n    return ranks.find((r) => r.rank === userrank).img;\r\n  };\r\n\r\n  const attIcon = (attacker) => {\r\n    return att.find((op) => op.operator === attacker).img;\r\n  };\r\n\r\n  const defIcon = (defender) => {\r\n    return def.find((op) => op.operator === defender).img;\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      elevation={0}\r\n      style={{ width: '100%', margin: '10px 0', padding: '10px 10px' }}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        className=\"match-button-container\"\r\n      >\r\n        <Grid item xs={2}>\r\n          <Avatar\r\n            src={discordAvatar(\r\n              match.liker.discordId,\r\n              match.liker.discordAvatar\r\n            )}\r\n            className=\"matches-avatar\"\r\n            alt={match.liker.displayName || match.liker.discordUsername}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\">\r\n            {match.liker.displayName || match.liker.discordUserName}\r\n          </Typography>\r\n          <Typography variant=\"caption\">\r\n            Matched: {new Date(match.time).toDateString()}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <img src={rankIcon(match.liker.rank)} />\r\n          <img src={attIcon(match.liker.att)} />\r\n          <img src={defIcon(match.liker.def)} />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Tooltip title=\"Send Discord Friend Request!\" style={{ padding: 0 }}>\r\n            <IconButton\r\n              className=\"icon\"\r\n              href={`https://discordapp.com/users/${match.liker.discordId}`}\r\n              target=\"_blank\"\r\n            >\r\n              <img\r\n                style={{\r\n                  height: 40,\r\n                  width: 40,\r\n                  padding: 5,\r\n                  fontSize: '2rem',\r\n                  color: '#dedede',\r\n                }}\r\n                src=\"./img/discord.png\"\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\Spinner.jsx",[],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":8,"column":8,"nodeType":"293","messageId":"294","endLine":8,"endColumn":15},{"ruleId":"291","severity":1,"message":"295","line":9,"column":8,"nodeType":"293","messageId":"294","endLine":9,"endColumn":10},{"ruleId":"291","severity":1,"message":"296","line":16,"column":10,"nodeType":"293","messageId":"294","endLine":16,"endColumn":16},{"ruleId":"291","severity":1,"message":"297","line":16,"column":18,"nodeType":"293","messageId":"294","endLine":16,"endColumn":27},{"ruleId":"291","severity":1,"message":"298","line":17,"column":10,"nodeType":"293","messageId":"294","endLine":17,"endColumn":17},{"ruleId":"291","severity":1,"message":"299","line":18,"column":10,"nodeType":"293","messageId":"294","endLine":18,"endColumn":15},{"ruleId":"300","severity":1,"message":"301","line":49,"column":6,"nodeType":"302","endLine":49,"endColumn":8,"suggestions":"303"},{"ruleId":"291","severity":1,"message":"304","line":1,"column":8,"nodeType":"293","messageId":"294","endLine":1,"endColumn":13},{"ruleId":"300","severity":1,"message":"305","line":52,"column":6,"nodeType":"302","endLine":52,"endColumn":8,"suggestions":"306"},{"ruleId":"291","severity":1,"message":"307","line":12,"column":3,"nodeType":"293","messageId":"294","endLine":12,"endColumn":14},{"ruleId":"291","severity":1,"message":"308","line":18,"column":3,"nodeType":"293","messageId":"294","endLine":18,"endColumn":13},{"ruleId":"291","severity":1,"message":"309","line":21,"column":8,"nodeType":"293","messageId":"294","endLine":21,"endColumn":18},{"ruleId":"310","severity":1,"message":"311","line":41,"column":11,"nodeType":"312","endLine":41,"endColumn":31},{"ruleId":"313","severity":1,"message":"314","line":43,"column":31,"nodeType":"315","endLine":43,"endColumn":47},{"ruleId":"291","severity":1,"message":"316","line":56,"column":9,"nodeType":"293","messageId":"294","endLine":56,"endColumn":21},{"ruleId":"310","severity":1,"message":"311","line":81,"column":15,"nodeType":"312","endLine":85,"endColumn":17},{"ruleId":"291","severity":1,"message":"299","line":25,"column":10,"nodeType":"293","messageId":"294","endLine":25,"endColumn":15},{"ruleId":"300","severity":1,"message":"317","line":79,"column":6,"nodeType":"302","endLine":79,"endColumn":8,"suggestions":"318"},{"ruleId":"310","severity":1,"message":"311","line":55,"column":15,"nodeType":"312","endLine":55,"endColumn":43},{"ruleId":"291","severity":1,"message":"298","line":38,"column":10,"nodeType":"293","messageId":"294","endLine":38,"endColumn":17},{"ruleId":"291","severity":1,"message":"319","line":38,"column":19,"nodeType":"293","messageId":"294","endLine":38,"endColumn":29},{"ruleId":"291","severity":1,"message":"299","line":39,"column":10,"nodeType":"293","messageId":"294","endLine":39,"endColumn":15},{"ruleId":"291","severity":1,"message":"320","line":39,"column":17,"nodeType":"293","messageId":"294","endLine":39,"endColumn":25},{"ruleId":"310","severity":1,"message":"311","line":70,"column":11,"nodeType":"312","endLine":70,"endColumn":30},{"ruleId":"310","severity":1,"message":"311","line":96,"column":9,"nodeType":"312","endLine":96,"endColumn":54},{"ruleId":"291","severity":1,"message":"299","line":12,"column":10,"nodeType":"293","messageId":"294","endLine":12,"endColumn":15},{"ruleId":"291","severity":1,"message":"321","line":12,"column":8,"nodeType":"293","messageId":"294","endLine":12,"endColumn":29},{"ruleId":"291","severity":1,"message":"322","line":30,"column":8,"nodeType":"293","messageId":"294","endLine":30,"endColumn":19},{"ruleId":"291","severity":1,"message":"323","line":30,"column":21,"nodeType":"293","messageId":"294","endLine":30,"endColumn":35},{"ruleId":"300","severity":1,"message":"324","line":49,"column":6,"nodeType":"302","endLine":49,"endColumn":8,"suggestions":"325"},{"ruleId":"310","severity":1,"message":"311","line":111,"column":21,"nodeType":"312","endLine":111,"endColumn":73},{"ruleId":"291","severity":1,"message":"326","line":5,"column":17,"nodeType":"293","messageId":"294","endLine":5,"endColumn":25},{"ruleId":"291","severity":1,"message":"327","line":11,"column":9,"nodeType":"293","messageId":"294","endLine":11,"endColumn":17},{"ruleId":"291","severity":1,"message":"328","line":8,"column":3,"nodeType":"293","messageId":"294","endLine":8,"endColumn":13},{"ruleId":"291","severity":1,"message":"329","line":27,"column":10,"nodeType":"293","messageId":"294","endLine":27,"endColumn":22},{"ruleId":"291","severity":1,"message":"330","line":27,"column":24,"nodeType":"293","messageId":"294","endLine":27,"endColumn":39},{"ruleId":"291","severity":1,"message":"299","line":29,"column":10,"nodeType":"293","messageId":"294","endLine":29,"endColumn":15},{"ruleId":"331","severity":1,"message":"332","line":19,"column":13,"nodeType":"312","endLine":19,"endColumn":80},{"ruleId":"310","severity":1,"message":"311","line":20,"column":15,"nodeType":"312","endLine":20,"endColumn":34},{"ruleId":"310","severity":1,"message":"311","line":33,"column":9,"nodeType":"312","endLine":33,"endColumn":61},{"ruleId":"310","severity":1,"message":"311","line":37,"column":9,"nodeType":"312","endLine":37,"endColumn":30},{"ruleId":"310","severity":1,"message":"311","line":38,"column":9,"nodeType":"312","endLine":38,"endColumn":30},{"ruleId":"291","severity":1,"message":"326","line":1,"column":25,"nodeType":"293","messageId":"294","endLine":1,"endColumn":33},{"ruleId":"291","severity":1,"message":"298","line":9,"column":10,"nodeType":"293","messageId":"294","endLine":9,"endColumn":17},{"ruleId":"291","severity":1,"message":"319","line":9,"column":19,"nodeType":"293","messageId":"294","endLine":9,"endColumn":29},{"ruleId":"291","severity":1,"message":"299","line":10,"column":10,"nodeType":"293","messageId":"294","endLine":10,"endColumn":15},{"ruleId":"291","severity":1,"message":"320","line":10,"column":17,"nodeType":"293","messageId":"294","endLine":10,"endColumn":25},{"ruleId":"310","severity":1,"message":"311","line":33,"column":11,"nodeType":"312","endLine":33,"endColumn":28},{"ruleId":"291","severity":1,"message":"333","line":20,"column":10,"nodeType":"293","messageId":"294","endLine":20,"endColumn":20},{"ruleId":"291","severity":1,"message":"334","line":21,"column":10,"nodeType":"293","messageId":"294","endLine":21,"endColumn":24},{"ruleId":"291","severity":1,"message":"322","line":25,"column":12,"nodeType":"293","messageId":"294","endLine":25,"endColumn":23},{"ruleId":"291","severity":1,"message":"323","line":25,"column":25,"nodeType":"293","messageId":"294","endLine":25,"endColumn":39},{"ruleId":"310","severity":1,"message":"311","line":122,"column":21,"nodeType":"312","endLine":122,"endColumn":73},{"ruleId":"291","severity":1,"message":"298","line":10,"column":10,"nodeType":"293","messageId":"294","endLine":10,"endColumn":17},{"ruleId":"291","severity":1,"message":"319","line":10,"column":19,"nodeType":"293","messageId":"294","endLine":10,"endColumn":29},{"ruleId":"291","severity":1,"message":"299","line":11,"column":10,"nodeType":"293","messageId":"294","endLine":11,"endColumn":15},{"ruleId":"291","severity":1,"message":"320","line":11,"column":17,"nodeType":"293","messageId":"294","endLine":11,"endColumn":25},{"ruleId":"291","severity":1,"message":"296","line":12,"column":10,"nodeType":"293","messageId":"294","endLine":12,"endColumn":16},{"ruleId":"291","severity":1,"message":"335","line":26,"column":11,"nodeType":"293","messageId":"294","endLine":26,"endColumn":22},{"ruleId":"336","severity":1,"message":"337","line":28,"column":22,"nodeType":"338","messageId":"339","endLine":28,"endColumn":24},{"ruleId":"300","severity":1,"message":"340","line":43,"column":6,"nodeType":"302","endLine":43,"endColumn":8,"suggestions":"341"},{"ruleId":"313","severity":1,"message":"314","line":25,"column":11,"nodeType":"315","endLine":25,"endColumn":28},{"ruleId":"310","severity":1,"message":"311","line":64,"column":13,"nodeType":"312","endLine":73,"endColumn":15},{"ruleId":"291","severity":1,"message":"342","line":3,"column":3,"nodeType":"293","messageId":"294","endLine":3,"endColumn":6},{"ruleId":"291","severity":1,"message":"343","line":13,"column":27,"nodeType":"293","messageId":"294","endLine":13,"endColumn":38},{"ruleId":"310","severity":1,"message":"311","line":60,"column":11,"nodeType":"312","endLine":60,"endColumn":51},{"ruleId":"310","severity":1,"message":"311","line":61,"column":11,"nodeType":"312","endLine":61,"endColumn":49},{"ruleId":"310","severity":1,"message":"311","line":62,"column":11,"nodeType":"312","endLine":62,"endColumn":49},{"ruleId":"310","severity":1,"message":"311","line":71,"column":15,"nodeType":"312","endLine":80,"endColumn":17},"no-native-reassign",["344"],"no-negated-in-lhs",["345"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'socket' is assigned a value but never used.","'setSocket' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["346"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.",["347"],"'DialogTitle' is defined but never used.","'StepButton' is defined but never used.","'OTPRequest' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'handleAccept' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["348"],"'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'StarBorderRoundedIcon' is defined but never used.","'viewDetails' is assigned a value but never used.","'setViewDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'mainAtt', 'mainDef', and 'rank'. Either include them or remove the dependency array.",["349"],"'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'Typography' is defined but never used.","'convoHistory' is assigned a value but never used.","'setConvoHistory' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'setSocials' is defined but never used.","'checkPropTypes' is defined but never used.","'checkOnline' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'chats'. Either include it or remove the dependency array.",["350"],"'Box' is defined but never used.","'socialMedia' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},"Update the dependencies array to be: [history]",{"range":"361","text":"362"},"Update the dependencies array to be: [history, location.search]",{"range":"363","text":"364"},"Update the dependencies array to be: [dispatch]",{"range":"365","text":"366"},"Update the dependencies array to be: [mainAtt, mainDef, rank]",{"range":"367","text":"368"},"Update the dependencies array to be: [chats]",{"range":"369","text":"370"},[1362,1364],"[history]",[1512,1514],"[history, location.search]",[2397,2399],"[dispatch]",[1924,1926],"[mainAtt, mainDef, rank]",[1146,1148],"[chats]"]