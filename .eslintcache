[{"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\reportWebVitals.js":"1","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\index.js":"2","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\index.js":"3","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\Display.jsx":"4","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\Chat.jsx":"5","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\index.js":"6","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\Details.jsx":"7","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\index.js":"8","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\ProfileCard.jsx":"9","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\index.js":"10","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\Chats.jsx":"11","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\index.js":"12","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\ChatButton.jsx":"13","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\index.tsx":"14","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\App.tsx":"15","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\index.ts":"16","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\utils.ts":"17","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Logout\\Logout.tsx":"18","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\profileSlice.ts":"19","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\matchSlice.ts":"20","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\chatSlice.ts":"21","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\index.ts":"22","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\index.ts":"23","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\index.ts":"24","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\Callback.tsx":"25","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\Login.tsx":"26","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\PrivateRoute.tsx":"27","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\About\\About.tsx":"28","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\index.ts":"29","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\index.ts":"30","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\index.ts":"31","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\index.ts":"32","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\Spinner.tsx":"33","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\Settings.tsx":"34","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\Header.tsx":"35","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\Footer.tsx":"36","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\index.ts":"37","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\lookup.ts":"38","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\Boop.tsx":"39","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\UploadPic\\UploadPic.tsx":"40","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\index.ts":"41","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\Slide.tsx":"42","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\index.ts":"43","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\Profile.tsx":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"46"},{"size":50,"mtime":1610401581422,"results":"47","hashOfConfig":"46"},{"size":59,"mtime":1610140783087,"results":"48","hashOfConfig":"46"},{"size":2898,"mtime":1611595786650,"results":"49","hashOfConfig":"46"},{"size":6541,"mtime":1611554294961,"results":"50","hashOfConfig":"46"},{"size":59,"mtime":1610469392347,"results":"51","hashOfConfig":"46"},{"size":1030,"mtime":1611589595633,"results":"52","hashOfConfig":"46"},{"size":71,"mtime":1610142298871,"results":"53","hashOfConfig":"46"},{"size":6104,"mtime":1611597214511,"results":"54","hashOfConfig":"46"},{"size":53,"mtime":1611329083059,"results":"55","hashOfConfig":"46"},{"size":747,"mtime":1611594794044,"results":"56","hashOfConfig":"46"},{"size":68,"mtime":1611329412172,"results":"57","hashOfConfig":"46"},{"size":2902,"mtime":1611593990391,"results":"58","hashOfConfig":"46"},{"size":713,"mtime":1611522627037,"results":"59","hashOfConfig":"46"},{"size":1794,"mtime":1611524692602,"results":"60","hashOfConfig":"46"},{"size":629,"mtime":1611525175685,"results":"61","hashOfConfig":"46"},{"size":1280,"mtime":1611600291081,"results":"62","hashOfConfig":"46"},{"size":307,"mtime":1611523641932,"results":"63","hashOfConfig":"46"},{"size":3723,"mtime":1611523873632,"results":"64","hashOfConfig":"46"},{"size":706,"mtime":1611599989890,"results":"65","hashOfConfig":"46"},{"size":1037,"mtime":1611600640790,"results":"66","hashOfConfig":"46"},{"size":62,"mtime":1611523105193,"results":"67","hashOfConfig":"46"},{"size":53,"mtime":1611523164324,"results":"68","hashOfConfig":"46"},{"size":74,"mtime":1611523238695,"results":"69","hashOfConfig":"46"},{"size":1539,"mtime":1611523504744,"results":"70","hashOfConfig":"46"},{"size":5418,"mtime":1611523610627,"results":"71","hashOfConfig":"46"},{"size":534,"mtime":1611524955762,"results":"72","hashOfConfig":"46"},{"size":5266,"mtime":1611523476966,"results":"73","hashOfConfig":"46"},{"size":59,"mtime":1611523257661,"results":"74","hashOfConfig":"46"},{"size":56,"mtime":1611541367116,"results":"75","hashOfConfig":"46"},{"size":56,"mtime":1611541187006,"results":"76","hashOfConfig":"46"},{"size":62,"mtime":1611523200715,"results":"77","hashOfConfig":"46"},{"size":195,"mtime":1611523840420,"results":"78","hashOfConfig":"46"},{"size":6851,"mtime":1611526492092,"results":"79","hashOfConfig":"46"},{"size":2699,"mtime":1611541319185,"results":"80","hashOfConfig":"46"},{"size":3216,"mtime":1611594740248,"results":"81","hashOfConfig":"46"},{"size":50,"mtime":1611523133374,"results":"82","hashOfConfig":"46"},{"size":6694,"mtime":1611526401205,"results":"83","hashOfConfig":"46"},{"size":1038,"mtime":1611523551437,"results":"84","hashOfConfig":"46"},{"size":2501,"mtime":1611524645465,"results":"85","hashOfConfig":"46"},{"size":53,"mtime":1611523142044,"results":"86","hashOfConfig":"46"},{"size":2305,"mtime":1611599131233,"results":"87","hashOfConfig":"46"},{"size":59,"mtime":1611596760896,"results":"88","hashOfConfig":"46"},{"size":4845,"mtime":1611599167916,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"y4om3f",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\reportWebVitals.js",[],["191","192"],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Display\\Display.jsx",["193"],"import { Container, Grid } from '@material-ui/core';\r\nimport React, { createRef, useMemo, useState, useEffect } from 'react';\r\nimport ProfileCard from '../ProfileCard';\r\nimport './display.css';\r\nimport OTPRequest from '../../../utils';\r\nimport Spinner from '../../utility/Spinner';\r\n\r\nexport default function Display() {\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  const shuffle = (profiles) => {\r\n    //shuffle the profiles\r\n    // with durstenfeld algo\r\n    for (let i = profiles.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [profiles[i], profiles[j]] = [profiles[j], profiles[i]];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProfiles = async () => {\r\n      const response = await OTPRequest('/swipe', {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      }).catch(() => {\r\n        setError(true);\r\n        return null;\r\n      });\r\n\r\n      if (response) {\r\n        if (response.profiles.length){\r\n        const shuffleProfiles = [...response.profiles];\r\n        shuffle(shuffleProfiles)\r\n\r\n        setProfiles(shuffleProfiles);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    getProfiles();\r\n  }, []);\r\n\r\n  const childRefs = useMemo(\r\n    () => ({ 1: createRef(), 2: createRef(), 3: createRef() }),\r\n    []\r\n  );\r\n\r\n  const swiped = async (direction, id) => {\r\n    console.log('removing: ' + id);\r\n    console.log(direction);\r\n    // make api call to update database\r\n    if (direction === 'right') {\r\n      await OTPRequest('/swipe', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ swipeId: id }),\r\n      });\r\n    }\r\n  };\r\n\r\n  const outOfFrame = (id) => {\r\n    console.log(id, ' out of frame, removed from list');\r\n    setIndex(index + 1);\r\n  };\r\n\r\n  const swipeButton = async (direction) => {\r\n    await childRefs[profiles[index].id].current.swipe(direction);\r\n  };\r\n\r\n  //TODO - this button doesnt work\r\n\r\n  const renderCards = () => {\r\n    if (profiles.length > 0) {\r\n      return profiles\r\n        .slice(index)\r\n        .reverse()\r\n        .map((profile, i) => (\r\n          <div className=\"swipe\">\r\n            <ProfileCard\r\n              ref={childRefs[profile.id]}\r\n              key={profile.discordId}\r\n              profile={profile}\r\n              swiped={swiped}\r\n              outOfFrame={outOfFrame}\r\n              swipeButton={swipeButton}\r\n            />\r\n          </div>\r\n        ));\r\n    }\r\n\r\n    return <>{':('}</>;\r\n  };\r\n\r\n  return (\r\n    <Container className=\"card-container\" maxWidth=\"sm\">\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        {loading ? <Spinner /> : renderCards()}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chat\\Chat.jsx",["194","195"],"import {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport OTPRequest, { discordAvatar, getSocket } from '../../../utils';\r\nimport Spinner from '../../utility/Spinner';\r\nimport './chat.css';\r\n\r\nexport default function Chat() {\r\n  const history = useHistory();\r\n\r\n  const { id: buddyId } = useParams();\r\n  const myId = useSelector((state) => state.profile.discordId);\r\n  const myAvatar = useSelector((state) => state.profile.discordAvatar);\r\n  const myDisplayName = useSelector((state) => state.profile.displayName);\r\n  const matches = useSelector((state) => state.match.matches);\r\n\r\n  const [convo, setConvo] = useState([]);\r\n  const [msg, setMsg] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [match, setMatch] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    // check if buddy ID and I are matched\r\n\r\n    const checkMatch = matches.filter(\r\n      (match, i) => buddyId === match.liker.discordId\r\n    );\r\n\r\n    if (checkMatch.length) {\r\n      setMatch(checkMatch[0]);\r\n      // if matched, get chat history\r\n      const getChatHistory = async () => {\r\n        const response = await OTPRequest(`/chat/${buddyId}`, {\r\n          method: 'GET',\r\n          headers: { 'Content-Type': 'application/json' },\r\n        }).catch(() => {\r\n          setError(true);\r\n          return null;\r\n        });\r\n\r\n        if (response) {\r\n          console.log('response', response);\r\n          setConvo(\r\n            response.map((chatlog, i) => {\r\n              return {\r\n                user: chatlog.senderId,\r\n                msg: chatlog.msg,\r\n                timestamp: new Date(chatlog.date).toDateString(),\r\n              };\r\n            })\r\n          );\r\n\r\n          // setConvoHistory(response);\r\n          setLoading(false);\r\n        }\r\n      };\r\n      getChatHistory();\r\n    } else {\r\n      //if not matched, push back to chat page\r\n      history.push('/messages');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const socket = getSocket();\r\n\r\n    socket.on('incomingMsg', (senderId, msg) => {\r\n      setConvo((prevConvo) => [\r\n        ...prevConvo,\r\n        { user: senderId, msg, timestamp: new Date().toDateString() },\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  const handleSendMsg = () => {\r\n    if (msg) {\r\n      setConvo([\r\n        ...convo,\r\n        { user: myId, msg, timestamp: new Date().toDateString() },\r\n      ]);\r\n      setMsg('');\r\n\r\n      getSocket().emit('outgoingMsg', myId, buddyId, msg);\r\n    } else {\r\n      console.log('error sending message');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (key) => {\r\n    if (key === 'Enter') {\r\n      handleSendMsg();\r\n    }\r\n  };\r\n\r\n  const renderChat = () => {\r\n    console.log('convo rendering', convo);\r\n    return convo.map((c, i) => {\r\n      if (c.user !== myId) {\r\n        return (\r\n          <Grid\r\n            key={`chat${i}`}\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Avatar\r\n              src={discordAvatar(\r\n                match.liker.discordId,\r\n                match.liker.discordAvatar\r\n              )}\r\n              alt={match.liker.displayName || match.liker.discordUsername}\r\n            />\r\n            <Box\r\n              component=\"span\"\r\n              m={1}\r\n              p={1}\r\n              style={{\r\n                background: '#FFFFFF70',\r\n              }}\r\n              className=\"chat-message\"\r\n            >\r\n              {c.msg}\r\n            </Box>\r\n            <Box className=\"chat-timestamp\">{c.timestamp}</Box>\r\n          </Grid>\r\n        );\r\n      } else {\r\n        return (\r\n          <Grid\r\n            key={`chat${i}`}\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Box className=\"chat-timestamp\">{c.timestamp}</Box>\r\n            <Box\r\n              component=\"span\"\r\n              m={1}\r\n              p={1}\r\n              style={{\r\n                background: '#00000030',\r\n              }}\r\n              className=\"chat-message\"\r\n            >\r\n              {c.msg}\r\n            </Box>\r\n            <Avatar src={discordAvatar(myId, myAvatar)} alt={myDisplayName} />\r\n          </Grid>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"chat-container\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        style={{ height: '100%' }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          style={{ padding: '5px 0 0 0' }}\r\n        >\r\n          {match && (match.liker.displayName || match.liker.discordUsername)}\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          className=\"chat-box scrollbar2\"\r\n        >\r\n          {loading ? <Spinner /> : renderChat()}\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          className=\"chat-send\"\r\n        >\r\n          {/* <input type=\"number\" value = {number} onChange={(e)=>setNumber(e.target.value)}/> */}\r\n\r\n          <Grid item xs={11}>\r\n            <TextField\r\n              id=\"filled-multiline-static\"\r\n              label=\"Type here...\"\r\n              placeholder=\"Start Chatting\"\r\n              variant=\"filled\"\r\n              value={msg}\r\n              onChange={(e) => setMsg(e.target.value)}\r\n              onKeyDown={(e) => handleKeyDown(e.key)}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <IconButton onClick={handleSendMsg}>\r\n              <SendRoundedIcon\r\n                style={{\r\n                  padding: 0,\r\n                  fontSize: '2rem',\r\n                  color: '#dedede',\r\n                  borderRadius: 0,\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\n//TODO: anchor to bottom of scrollbar https://stackoverflow.com/questions/37620694/how-to-scroll-to-bottom-in-react\r\n//TODO: fix chat spacing\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\Details\\Details.jsx",["196","197","198","199","200"],"import { Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { socialMedia } from '../../../lookup';\r\nimport './details.css';\r\n\r\nexport default function Details({\r\n  name,\r\n  rank,\r\n  socials,\r\n  rankIcon,\r\n  attIcon,\r\n  defIcon,\r\n}) {\r\n  const renderSocials = () => {\r\n    return socialMedia.reduce((final, s) => {\r\n      if (socials[s.site]) {\r\n        final.push(\r\n          <div>\r\n            <a href={`https://www.${s.url}${socials[s.site]}`} target=\"_blank\">\r\n              <img src={s.img} />\r\n            </a>\r\n          </div>\r\n        );\r\n      }\r\n      return final;\r\n    }, []);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"details-container scrollbar\">\r\n      <div>\r\n        {' '}\r\n        <img className=\"rank-profile-icon\" src={rankIcon} />\r\n        {name.toUpperCase()}, {rank}\r\n      </div>\r\n      <div className=\"mains\">\r\n        {attIcon && <img src={attIcon} />}\r\n        {defIcon && <img src={defIcon} />}\r\n      </div>\r\n      <div className=\"social\">{renderSocials()}</div>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\display\\ProfileCard\\ProfileCard.jsx",["201","202","203","204","205"],"import {\r\n  Box,\r\n  Card,\r\n  CardMedia,\r\n  Grid,\r\n  IconButton,\r\n  MobileStepper,\r\n} from '@material-ui/core';\r\nimport ArrowLeftRoundedIcon from '@material-ui/icons/ArrowLeftRounded';\r\nimport ArrowRightRoundedIcon from '@material-ui/icons/ArrowRightRounded';\r\nimport CheckCircleOutlineRoundedIcon from '@material-ui/icons/CheckCircleOutlineRounded';\r\nimport HighlightOffRoundedIcon from '@material-ui/icons/HighlightOffRounded';\r\nimport UnfoldMoreRoundedIcon from '@material-ui/icons/UnfoldMoreRounded';\r\nimport React, { forwardRef, useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport Slide from '../../effects/Slide';\r\nimport Details from '../Details';\r\nimport './profilecard.css';\r\nimport { ranks, att, def, socialMedia } from '../../../lookup';\r\nimport { setSocials } from '../../../store/profileSlice';\r\nimport { checkPropTypes } from 'prop-types';\r\nimport { discordAvatar } from '../../../utils';\r\n\r\nexport default forwardRef(\r\n  ({ profile, swiped, outOfFrame, swipeButton }, ref) => {\r\n    const [viewDetails, setViewDetails] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [currentImgIndex, setCurrentImgIndex] = useState(0);\r\n    const [rankIcon, setRankIcon] = useState('');\r\n\r\n    const [attIcon, setAttIcon] = useState('');\r\n    const [defIcon, setDefIcon] = useState('');\r\n    const [pics, setPics] = useState([]);\r\n    const [socials, setSocials] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const rankIcon = ranks.find((r) => r.rank === profile.rank);\r\n      setRankIcon(rankIcon ? rankIcon.img : '');\r\n\r\n      const attMain = att.find((op) => op.operator === profile.att);\r\n      setAttIcon(attMain ? attMain.img : '');\r\n\r\n      const defMain = def.find((op) => op.operator === profile.def);\r\n      setDefIcon(defMain ? defMain.img : '');\r\n\r\n      setPics(\r\n        profile.pictures.length\r\n          ? profile.pictures.map((pic, i) => pic.url)\r\n          : [discordAvatar(profile.discordId, profile.discordAvatar)]\r\n      );\r\n\r\n      setSocials(\r\n        socialMedia.reduce((final, s) => {\r\n          if (profile[s.site]) {\r\n            final[s.site] = profile[s.site];\r\n          }\r\n          return final;\r\n        }, {})\r\n      );\r\n    }, [profile]);\r\n\r\n    //TODO: click away, setViewDetails = false;\r\n\r\n    const handleNext = () => {\r\n      setCurrentImgIndex(currentImgIndex + 1);\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n      setCurrentImgIndex(currentImgIndex - 1);\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    return (\r\n      <TinderCard\r\n        className=\"profile-card\"\r\n        onSwipe={(dir) => swiped(dir, profile.discordId)}\r\n        onCardLeftScreen={() => outOfFrame(profile.discordId)}\r\n        preventSwipe={['up', 'down']}\r\n        ref={ref}\r\n      >\r\n        <Card className=\"card\">\r\n          <MobileStepper\r\n            className=\"profile-stepper\"\r\n            variant=\"dots\"\r\n            steps={3}\r\n            position=\"static\"\r\n            activeStep={activeStep}\r\n            nextButton={\r\n              <IconButton\r\n                onClick={handleNext}\r\n                disabled={activeStep === pics.length - 1}\r\n              >\r\n                <ArrowRightRoundedIcon className=\"icon\" fontSize=\"large\" />\r\n              </IconButton>\r\n            }\r\n            backButton={\r\n              <IconButton onClick={handleBack} disabled={activeStep === 0}>\r\n                <ArrowLeftRoundedIcon className=\"icon\" fontSize=\"large\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n\r\n          <CardMedia\r\n            className=\"profile-img\"\r\n            component=\"img\"\r\n            image={pics[currentImgIndex]}\r\n          />\r\n          <Grid container direction=\"columns\" className=\"content\">\r\n            <Slide isVisible={isVisible}>\r\n              <Details\r\n                name={profile.displayName || profile.discordUserName}\r\n                rank={profile.rank}\r\n                socials={socials}\r\n                rankIcon={rankIcon}\r\n                attIcon={attIcon}\r\n                defIcon={defIcon}\r\n              />\r\n            </Slide>\r\n\r\n            <Box className=\"title\">\r\n              <div>\r\n                {isVisible || (\r\n                  <>\r\n                    <img className=\"rank-profile-icon\" src={rankIcon} />\r\n                    {profile.displayName.toUpperCase()}, {profile.rank}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Box>\r\n\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              className=\"buttons\"\r\n            >\r\n              <IconButton onClick={() => swipeButton('left')}>\r\n                <HighlightOffRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{\r\n                    padding: 1,\r\n                    fontSize: '2rem',\r\n                    color: '#FA4659',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n                />\r\n              </IconButton>\r\n\r\n              <IconButton onClick={() => setIsVisible(!isVisible)}>\r\n                <UnfoldMoreRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{\r\n                    padding: 5,\r\n                    fontSize: '3rem',\r\n                    color: '#20639B',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n                />\r\n              </IconButton>\r\n              <IconButton onClick={() => swipeButton('right')}>\r\n                <CheckCircleOutlineRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{\r\n                    padding: 1,\r\n                    fontSize: '2rem',\r\n                    color: '#2EB872',\r\n                    backgroundColor: 'transparent',\r\n                  }}\r\n                />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </TinderCard>\r\n    );\r\n  }\r\n);\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\Chats\\Chats.jsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\index.js",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\chat\\ChatButton\\ChatButton.jsx",["206","207"],"import {\r\n  Avatar,\r\n  Badge,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport ChatRoundedIcon from '@material-ui/icons/ChatRounded';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './chatbutton.css';\r\nimport { discordAvatar } from '../../../utils';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function ChatButton({ chatBuddy }) {\r\n  const online = useSelector((state) =>\r\n    state.chat.onlineChats.some((id) => chatBuddy.discordId === id)\r\n  );\r\n\r\n  return (\r\n    <Paper elevation={0} className=\"message-match\">\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs>\r\n          <Badge\r\n            className=\"online-badge\"\r\n            badgeContent={100}\r\n            color=\"primary\"\r\n            className=\"badge\"\r\n            variant=\"dot\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            overlap=\"circle\"\r\n            invisible={!online}\r\n          >\r\n            <Avatar\r\n              alt={chatBuddy.displayName || chatBuddy.discordUsername}\r\n              src={discordAvatar(chatBuddy.discordId, chatBuddy.discordAvatar)}\r\n            />\r\n          </Badge>\r\n        </Grid>\r\n        <Grid item xs>\r\n          {chatBuddy.displayName || chatBuddy.discordUsername}\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Tooltip title=\"Send a message!\" style={{ padding: 0 }}>\r\n            <Link to={`/messages/${chatBuddy.discordId}`}>\r\n              <IconButton\r\n                className=\"icon\"\r\n                // href={`/messages/${match.name}`}\r\n              >\r\n                <ChatRoundedIcon\r\n                  className=\"icon\"\r\n                  color=\"primary\"\r\n                  style={{ padding: 5, fontSize: '2rem' }}\r\n                />\r\n              </IconButton>\r\n            </Link>\r\n          </Tooltip>\r\n          <Tooltip title=\"Send Discord Friend Request!\" style={{ padding: 0 }}>\r\n            <IconButton\r\n              className=\"icon\"\r\n              href={`https://discordapp.com/users/${chatBuddy.discordId}`}\r\n              target=\"_blank\"\r\n            >\r\n              <img\r\n                style={{\r\n                  height: 30,\r\n                  width: 30,\r\n                  padding: 5,\r\n                  fontSize: '2rem',\r\n                  color: '#dedede',\r\n                }}\r\n                src=\"./img/discord.png\"\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          {/* <Chip\r\n        icon={\r\n          <img style={{ height: 20, width: 20 }} src=\"./img/discord.png\" />\r\n        }\r\n        label=\"Send\"\r\n        clickable\r\n        color=\"primary\"\r\n        onClick={() =>\r\n          window.open(`https://discordapp.com/users/${match.id}`)\r\n        }\r\n      /> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\index.tsx",[],["208","209"],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\App.tsx",["210","211","212","213","214","215","216"],"import React, { useEffect, useState } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport './App.css';\nimport Callback from './components/Callback';\nimport Login from './components/Login';\nimport Logout from './components/Logout/Logout';\nimport Main from './components/Main';\nimport Spinner from './components/utility/Spinner';\nimport io from 'socket.io-client';\nimport OTPRequest from './utils';\nimport PrivateRoute from './components/utility/PrivateRoute';\n\nfunction App() {\n  const history = useHistory();\n\n  const [socket, setSocket] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  // useEffect (()=>{\n\n  //   const socket = io('http://localhost:5000')\n\n  //   setSocket(socket);\n  //   socket.emit('hi', new Date())\n\n  //   socket.on('FromAPI', (msg)=>{console.log(msg)})\n\n  // }, [])\n\n  useEffect(() => {\n    const checkJWT = async () => {\n      const response = await OTPRequest('/authorize/token', {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      }).catch(() => {\n        setError(true);\n        return null;\n      });\n\n      if (response === '401') {\n        history.push('/login');\n      } else if (response) {\n        localStorage.setItem('OTP_TOKEN', response);\n      }\n      setLoading(false);\n    };\n    checkJWT();\n  }, []);\n\n  return (\n    <div\n      className=\"app\"\n    >\n      <Switch>\n        <Route path=\"/callback\">\n          <Callback />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <PrivateRoute path=\"/\">\n          <Main />\n        </PrivateRoute>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n// header\n// card\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\utils.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Logout\\Logout.tsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\profileSlice.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\matchSlice.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\store\\chatSlice.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Callback\\Callback.tsx",["217","218"],"import React, { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport OTPRequest from '../../utils';\r\n\r\nexport default function Callback() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // get the code from the url query\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const code = searchParams.get('code');\r\n\r\n    console.log('code', code);\r\n\r\n    // if a code is returned\r\n    if (code) {\r\n      // make a call to the api endpoint to exchange the code for the google_id\r\n\r\n      const login = async () => {\r\n        const response = await OTPRequest(\r\n          '/authorize/exchange',\r\n          {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ code }),\r\n          },\r\n          true\r\n        );\r\n\r\n        // we save the google_id to the local storage\r\n        // this is their identifier\r\n        // and maintains the session\r\n        const token = await response.json();\r\n        localStorage.setItem('OTP_TOKEN', token);\r\n\r\n        // if 201 status, they are a new user\r\n        if (response.status === 201) {\r\n          history.push('/settings');\r\n        } else {\r\n\r\n        // else push to main page\r\n        history.push('/');\r\n        }\r\n      };\r\n\r\n      login();\r\n    } else {\r\n      // they did not authorize/we did not get a code back and they need to relogin\r\n      history.push('/login');\r\n    }\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\Login\\Login.tsx",["219","220","221","222","223","224"],"import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  StepButton,\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport OTPRequest, { API } from '../../utils';\r\nimport './login.css';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nexport default function Login() {\r\n  const [dialog, setDialog] = useState(false);\r\n  const [disableButton, setDisableButton] = useState(true);\r\n\r\n  const actions = [\r\n    { item: 'Login w/ Discord', icon: './img/discord (1).png' },\r\n    { item: 'Create your Profile', icon: './img/profile-user.png' },\r\n    { item: 'Connect w/ Siege Players', icon: './img/like.png' },\r\n    { item: 'Make Friends, Have Fun', icon: './img/high-five.png' },\r\n  ];\r\n\r\n  const generate = () => {\r\n    return actions.map((a, i) => (\r\n      <ListItem>\r\n        <ListItemIcon>\r\n          <img src={a.icon} />\r\n        </ListItemIcon>\r\n        <ListItemText primary={a.item} />\r\n      </ListItem>\r\n    ));\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    setDialog(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setDialog(false);\r\n  };\r\n\r\n  const handleAccept = () => {\r\n    window.location.href = `${API}/authorize`;\r\n  };\r\n\r\n  return (\r\n    <Container className=\"login-container\" maxWidth=\"sm\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        style={{ height: '50%' }}\r\n      >\r\n        <Grid item xs>\r\n          <Typography variant=\"h4\">FInd your one true party.</Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n            You're not thirsty, you're just lonely.\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs style={{width: \"100%\"}}>\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"login-btn\"\r\n            startIcon={\r\n              <img\r\n                className=\"logo\"\r\n                src=\"./img/otp.png\"\r\n                style={{ height: 50, width: 50 }}\r\n              />\r\n            }\r\n            onClick={handleDialogOpen}\r\n            style={{ backgroundColor: '#FFFFFF50' }}\r\n            fullWidth\r\n          />\r\n          <Dialog\r\n            open={dialog}\r\n            onClose={handleDialogClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                <Typography variant=\"body2\">\r\n                  Please read the terms of service carefully before using the\r\n                  OTP web-app operated by ruvvet.com.\r\n                </Typography>\r\n                <Typography variant=\"h6\">Conditions of use </Typography>\r\n                <Typography variant=\"body2\">\r\n                  By using this website, you certify that you have read and\r\n                  reviewed this Agreement and that you agree to comply with its\r\n                  terms. If you do not want to be bound by the terms of this\r\n                  Agreement, you are advised to leave the website accordingly.\r\n                  OTP only grants use and access of this website, its products,\r\n                  and its services to those who have accepted its terms.\r\n                </Typography>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    icon={<FavoriteBorder />}\r\n                    checkedIcon={<Favorite />}\r\n                    // onChange={(e) => handleAccept()}\r\n                    onChange={(e) =>\r\n                      setDisableButton(disableButton ? false : true)\r\n                    }\r\n                  />\r\n                }\r\n                label=\"I accept and agree to the Terms of Use\"\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                autoFocus\r\n                disabled={disableButton}\r\n                href={`${API}/authorize`}\r\n              >\r\n                Login\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Grid>\r\n\r\n        {/*\r\n        <Button\r\n          variant=\"contained\"\r\n          className=\"login-btn\"\r\n          startIcon={\r\n            <img\r\n              className=\"logo\"\r\n              src=\"./img/otp.png\"\r\n              style={{ height: 50, width: 50 }}\r\n            />\r\n          }\r\n          href={`${API}/authorize`}\r\n          style={{ backgroundColor: '#FFFFFF50' }}\r\n          fullWidth\r\n        /> */}\r\n\r\n        <Grid item xs>\r\n          <Paper elevation={3}>\r\n            <List>{generate()}</List>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs className=\"login-disclaimer\">\r\n          <Typography variant=\"caption\">\r\n            Not affiliated with Ubisoft. All product names, logos, and brands\r\n            are property of their respective owners. All company, product and\r\n            service names used in this website are for identification purposes\r\n            only.\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\PrivateRoute\\PrivateRoute.tsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\About\\About.tsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\utility\\Spinner\\Spinner.tsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\Settings\\Settings.tsx",["225","226","227","228","229","230"],"import {\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { att, def, ranks, socialMedia } from '../../../lookup';\r\nimport { RootState } from '../../../store';\r\nimport {\r\n  setDisplayName,\r\n  setMainAtt,\r\n  setMainDef,\r\n  setRank,\r\n  setSocials,\r\n} from '../../../store/profileSlice';\r\nimport OTPRequest from '../../../utils';\r\nimport UploadPic from '../UploadPic/UploadPic';\r\nimport './settings.css';\r\n\r\nexport default function Settings() {\r\n  const dispatch = useDispatch();\r\n\r\n  const displayName = useSelector(\r\n    (state: RootState) => state.profile.displayName\r\n  );\r\n  const rank = useSelector((state: RootState) => state.profile.rank);\r\n  const pics = useSelector((state: RootState) => state.profile.pics);\r\n  const socials = useSelector((state: RootState) => state.profile.socials);\r\n  const mainAtt = useSelector((state: RootState) => state.profile.mainAtt);\r\n  const mainDef = useSelector((state: RootState) => state.profile.mainDef);\r\n\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setSnackbar(true);\r\n    e.preventDefault();\r\n\r\n    const newProfile = {\r\n      displayName,\r\n      rank,\r\n      socials,\r\n      mainAtt,\r\n      mainDef,\r\n    };\r\n\r\n    await OTPRequest('/profile', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newProfile),\r\n    });\r\n\r\n    //TODO progress bar/set snackbar after successful save\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(false);\r\n  };\r\n\r\n  const renderSocialInputs = (list: {\r\n    img: string;\r\n    site: keyof typeof socials;\r\n    url: string;\r\n  }[]) => {\r\n    return list.map((s, i) => (\r\n      <Grid container spacing={1} alignItems=\"flex-end\">\r\n        <Grid item>\r\n          <img src={s.img} />\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            key={`input-${i}`}\r\n            id={s.site}\r\n            label={s.site.toUpperCase()}\r\n            // value = {socials[s.site]}\r\n            className=\"input\"\r\n            helperText={\r\n              `${s.url}${socials[s.site]}`.length > 25\r\n                ? `${s.url}${socials[s.site]}`.slice(0, 25) + '...'\r\n                : `${s.url}${socials[s.site]}`\r\n            }\r\n            onChange={(e) => {\r\n              dispatch(setSocials({ ...socials, [s.site]: e.target.value }));\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    ));\r\n  };\r\n\r\n  const renderSelects = (list: {rank?: string, operator?: string, img: string}[]) => {\r\n    return list.map((item, i) => (\r\n      <MenuItem divider value={item.rank || item.operator}>\r\n        <img className=\"select-img\" src={item.img} />\r\n        {item.rank ? item.rank : item.operator}\r\n      </MenuItem>\r\n    ));\r\n  };\r\n\r\n  const renderPics = () => {\r\n    return Object.keys(pics).map((picKey) => (\r\n      <UploadPic picKey={picKey} pic={pics[picKey as keyof typeof pics]} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className=\"settings-container\">\r\n      {/* <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\"> */}\r\n      <Grid item xs={12} className=\"settings-section profile\">\r\n        <TextField\r\n          id=\"standard-full-width\"\r\n          value={displayName}\r\n          style={{ margin: 8 }}\r\n          placeholder=\"Display Name\"\r\n          helperText={`Hi my name is ...${displayName}`}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={(e) => {\r\n            dispatch(setDisplayName(e.target.value));\r\n          }}\r\n        />\r\n        <InputLabel id=\"rank-input\">Rank</InputLabel>\r\n        <Select\r\n          labelId=\"rank-input\"\r\n          value={rank}\r\n          onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\r\n            dispatch(setRank(e.target.value as string));\r\n          }}\r\n          fullWidth\r\n        >\r\n          {renderSelects(ranks)}\r\n        </Select>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          {renderPics()}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"settings-section social\">\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            {renderSocialInputs(socialMedia.slice(0, socialMedia.length / 2))}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {renderSocialInputs(socialMedia.slice(socialMedia.length / 2))}\r\n          </Grid>\r\n          {/* Rank Slider\r\n      <Slider\r\n        value={rankRange}\r\n        onChange={handleRankRange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={() => {\r\n          return `${rankRange}`;\r\n        }}\r\n      /> */}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"settings-section ops\" id=\"ops\">\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel id=\"rank-input\">Att Main</InputLabel>\r\n          <Select\r\n            label=\"att\"\r\n            id=\"rank-select\"\r\n            value={mainAtt}\r\n            className=\"settings-main-op\"\r\n            onChange={(e) => {\r\n              dispatch(setMainAtt(e.target.value as string));\r\n            }}\r\n            autoWidth={true}\r\n          >\r\n            {renderSelects(att)}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel id=\"rank-input\">Def Main</InputLabel>\r\n          <Select\r\n            label=\"def\"\r\n            id=\"rank-select\"\r\n            value={mainDef}\r\n            className=\"settings-main-op\"\r\n            onChange={(e) => {\r\n              dispatch(setMainDef(e.target.value as string));\r\n            }}\r\n          >\r\n            {renderSelects(def)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"save-button\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          className=\"settings-submit\"\r\n          startIcon={<SaveIcon />}\r\n          onClick={handleSubmit}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Snackbar\r\n          open={snackbar}\r\n          onClose={handleCloseSnackbar}\r\n          autoHideDuration={3000}\r\n          message=\"Saved!\"\r\n        />\r\n      </Grid>\r\n      {/* </Grid> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\n//TODO: PROGRESS FOR SAVE BUTTON: https://material-ui.com/components/progress/\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\header\\Header\\Header.tsx",["231"],"import { Badge, Container, Grid, IconButton, Tooltip } from '@material-ui/core';\r\nimport NotificationsRoundedIcon from '@material-ui/icons/NotificationsRounded';\r\nimport ReplyRoundedIcon from '@material-ui/icons/ReplyRounded';\r\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Boop from '../../effects/Boop';\r\nimport './header.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../store';\r\n\r\nexport default function Header() {\r\n  const location = useLocation();\r\n\r\n  const [back, setBack] = useState(false);\r\n\r\n  const matchNotification = useSelector(\r\n    (state: RootState) => state.match.matchNotification\r\n  );\r\n\r\n  useEffect(() => {\r\n    setBack(window.location.pathname === '/');\r\n  }, [location]);\r\n\r\n  return (\r\n    <Container className=\"header-container\" maxWidth=\"sm\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Boop rotation={10} timing={150}>\r\n          <Tooltip title={back ? 'Settings' : 'Main'} style={{ padding: 0 }}>\r\n            <Link to={back ? '/settings' : '/'}>\r\n              <IconButton>\r\n                {back ? (\r\n                  <SettingsRoundedIcon\r\n                    className=\"icon\"\r\n                    style={{ padding: 10, fontSize: '2rem', color: '#dedede' }}\r\n                  />\r\n                ) : (\r\n                  <ReplyRoundedIcon\r\n                    className=\"icon\"\r\n                    style={{ padding: 10, fontSize: '2rem', color: '#dedede' }}\r\n                  />\r\n                )}\r\n              </IconButton>\r\n            </Link>\r\n          </Tooltip>\r\n        </Boop>\r\n\r\n        <div>\r\n          <Tooltip title=\"About OTP\" style={{ padding: 0 }}>\r\n            <Link to=\"/about\">\r\n              <img src=\"../img/otp.png\" />\r\n            </Link>\r\n          </Tooltip>\r\n        </div>\r\n\r\n        <Boop rotation={10} timing={150}>\r\n          <Tooltip title=\"Notifications\" style={{ padding: 0 }}>\r\n            <IconButton>\r\n              <Badge\r\n                badgeContent={matchNotification}\r\n                color=\"primary\"\r\n                className=\"badge\"\r\n                showZero\r\n                max={99}\r\n                overlap=\"circle\"\r\n              >\r\n                <NotificationsRoundedIcon\r\n                  className=\"icon\"\r\n                  style={{ padding: 10, fontSize: '2rem', color: '#e6c714' }}\r\n                />\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Boop>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\footer\\Footer\\Footer.tsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\lookup.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Boop\\Boop.tsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\settings\\UploadPic\\UploadPic.tsx",["232","233","234","235","236","237"],"import { Grid, IconButton, Snackbar } from '@material-ui/core';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport React, { useState } from 'react';\r\nimport OTPRequest from '../../../utils';\r\nimport './uploadpic.css';\r\n\r\ninterface Props {\r\n  picKey: string;\r\n  pic: string;\r\n}\r\n\r\ninterface HTMLInputEvent extends Event {\r\n  target: HTMLInputElement & EventTarget;\r\n}\r\n\r\nexport default function UploadPic({ picKey, pic }: Props) {\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState();\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(false);\r\n  };\r\n\r\n  const handleInput = async (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    picKey: string\r\n  ) => {\r\n    setSnackbar(true);\r\n\r\n    if (!e.target.files) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('pic', e.target.files[0]);\r\n    formData.append('picKey', picKey);\r\n\r\n    await OTPRequest('/profile/pics', {\r\n      method: 'PUT',\r\n      body: formData,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid item xs className=\"upload-pic-item\">\r\n      {pic ? (\r\n        <>\r\n          <img src={pic} />\r\n          <div className=\"float-input\">\r\n            <input\r\n              accept=\"image/*\"\r\n              id={picKey}\r\n              type=\"file\"\r\n              style={{ display: 'none' }}\r\n              onChange={(e) => handleInput(e, picKey)}\r\n            />\r\n            <label htmlFor={picKey}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                className=\"input-icon\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            accept=\"image/*\"\r\n            id={picKey}\r\n            type=\"file\"\r\n            style={{ display: 'none' }}\r\n            onChange={(e) => handleInput(e, picKey)}\r\n          />\r\n          <label htmlFor={picKey}>\r\n            <IconButton\r\n              color=\"primary\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <PhotoCamera />\r\n            </IconButton>\r\n          </label>\r\n        </div>\r\n      )}\r\n\r\n      <Snackbar\r\n        open={snackbar}\r\n        onClose={handleCloseSnackbar}\r\n        autoHideDuration={3000}\r\n        message=\"Saved!\"\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\effects\\Slide\\Slide.tsx",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\index.ts",[],"D:\\SEI1019\\major_projects\\OTP\\otp-ui\\src\\components\\profile\\Profile\\Profile.tsx",["238","239","240","241"],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":12,"column":10,"nodeType":"248","messageId":"249","endLine":12,"endColumn":15},{"ruleId":"246","severity":1,"message":"247","line":30,"column":10,"nodeType":"248","messageId":"249","endLine":30,"endColumn":15},{"ruleId":"250","severity":1,"message":"251","line":72,"column":6,"nodeType":"252","endLine":72,"endColumn":8,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":19,"column":13,"nodeType":"256","endLine":19,"endColumn":80},{"ruleId":"257","severity":1,"message":"258","line":20,"column":15,"nodeType":"256","endLine":20,"endColumn":34},{"ruleId":"257","severity":1,"message":"258","line":33,"column":9,"nodeType":"256","endLine":33,"endColumn":61},{"ruleId":"257","severity":1,"message":"258","line":37,"column":21,"nodeType":"256","endLine":37,"endColumn":42},{"ruleId":"257","severity":1,"message":"258","line":38,"column":21,"nodeType":"256","endLine":38,"endColumn":42},{"ruleId":"246","severity":1,"message":"259","line":20,"column":10,"nodeType":"248","messageId":"249","endLine":20,"endColumn":20},{"ruleId":"246","severity":1,"message":"260","line":21,"column":10,"nodeType":"248","messageId":"249","endLine":21,"endColumn":24},{"ruleId":"246","severity":1,"message":"261","line":26,"column":12,"nodeType":"248","messageId":"249","endLine":26,"endColumn":23},{"ruleId":"246","severity":1,"message":"262","line":26,"column":25,"nodeType":"248","messageId":"249","endLine":26,"endColumn":39},{"ruleId":"257","severity":1,"message":"258","line":126,"column":21,"nodeType":"256","endLine":126,"endColumn":73},{"ruleId":"263","severity":1,"message":"264","line":29,"column":13,"nodeType":"265","endLine":29,"endColumn":30},{"ruleId":"257","severity":1,"message":"258","line":68,"column":15,"nodeType":"256","endLine":77,"endColumn":17},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"266","severity":1,"message":"267","line":8,"column":8,"nodeType":"248","messageId":"249","endLine":8,"endColumn":15},{"ruleId":"266","severity":1,"message":"268","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":10},{"ruleId":"266","severity":1,"message":"269","line":16,"column":10,"nodeType":"248","messageId":"249","endLine":16,"endColumn":16},{"ruleId":"266","severity":1,"message":"270","line":16,"column":18,"nodeType":"248","messageId":"249","endLine":16,"endColumn":27},{"ruleId":"266","severity":1,"message":"271","line":17,"column":10,"nodeType":"248","messageId":"249","endLine":17,"endColumn":17},{"ruleId":"266","severity":1,"message":"247","line":18,"column":10,"nodeType":"248","messageId":"249","endLine":18,"endColumn":15},{"ruleId":"250","severity":1,"message":"272","line":49,"column":6,"nodeType":"252","endLine":49,"endColumn":8,"suggestions":"273"},{"ruleId":"266","severity":1,"message":"274","line":1,"column":8,"nodeType":"248","messageId":"249","endLine":1,"endColumn":13},{"ruleId":"250","severity":1,"message":"275","line":52,"column":6,"nodeType":"252","endLine":52,"endColumn":8,"suggestions":"276"},{"ruleId":"266","severity":1,"message":"277","line":12,"column":3,"nodeType":"248","messageId":"249","endLine":12,"endColumn":14},{"ruleId":"266","severity":1,"message":"278","line":18,"column":3,"nodeType":"248","messageId":"249","endLine":18,"endColumn":13},{"ruleId":"266","severity":1,"message":"279","line":21,"column":8,"nodeType":"248","messageId":"249","endLine":21,"endColumn":18},{"ruleId":"257","severity":1,"message":"258","line":41,"column":11,"nodeType":"256","endLine":41,"endColumn":31},{"ruleId":"266","severity":1,"message":"280","line":56,"column":9,"nodeType":"248","messageId":"249","endLine":56,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":81,"column":15,"nodeType":"256","endLine":85,"endColumn":17},{"ruleId":"266","severity":1,"message":"271","line":41,"column":10,"nodeType":"248","messageId":"249","endLine":41,"endColumn":17},{"ruleId":"266","severity":1,"message":"281","line":41,"column":19,"nodeType":"248","messageId":"249","endLine":41,"endColumn":29},{"ruleId":"266","severity":1,"message":"247","line":42,"column":10,"nodeType":"248","messageId":"249","endLine":42,"endColumn":15},{"ruleId":"266","severity":1,"message":"282","line":42,"column":17,"nodeType":"248","messageId":"249","endLine":42,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":77,"column":11,"nodeType":"256","endLine":77,"endColumn":30},{"ruleId":"257","severity":1,"message":"258","line":103,"column":9,"nodeType":"256","endLine":103,"endColumn":54},{"ruleId":"257","severity":1,"message":"258","line":56,"column":15,"nodeType":"256","endLine":56,"endColumn":43},{"ruleId":"266","severity":1,"message":"283","line":12,"column":11,"nodeType":"248","messageId":"249","endLine":12,"endColumn":25},{"ruleId":"266","severity":1,"message":"271","line":18,"column":10,"nodeType":"248","messageId":"249","endLine":18,"endColumn":17},{"ruleId":"266","severity":1,"message":"281","line":18,"column":19,"nodeType":"248","messageId":"249","endLine":18,"endColumn":29},{"ruleId":"266","severity":1,"message":"247","line":19,"column":10,"nodeType":"248","messageId":"249","endLine":19,"endColumn":15},{"ruleId":"266","severity":1,"message":"282","line":19,"column":17,"nodeType":"248","messageId":"249","endLine":19,"endColumn":25},{"ruleId":"257","severity":1,"message":"258","line":49,"column":11,"nodeType":"256","endLine":49,"endColumn":28},{"ruleId":"266","severity":1,"message":"261","line":31,"column":10,"nodeType":"248","messageId":"249","endLine":31,"endColumn":21},{"ruleId":"266","severity":1,"message":"262","line":31,"column":23,"nodeType":"248","messageId":"249","endLine":31,"endColumn":37},{"ruleId":"250","severity":1,"message":"284","line":50,"column":6,"nodeType":"252","endLine":50,"endColumn":8,"suggestions":"285"},{"ruleId":"257","severity":1,"message":"258","line":113,"column":21,"nodeType":"256","endLine":113,"endColumn":73},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'buddyId', 'history', and 'matches'. Either include them or remove the dependency array.","ArrayExpression",["288"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setSocials' is defined but never used.","'checkPropTypes' is defined but never used.","'viewDetails' is assigned a value but never used.","'setViewDetails' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","@typescript-eslint/no-unused-vars","'Spinner' is defined but never used.","'io' is defined but never used.","'socket' is assigned a value but never used.","'setSocket' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["289"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.",["290"],"'DialogTitle' is defined but never used.","'StepButton' is defined but never used.","'OTPRequest' is defined but never used.","'handleAccept' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'HTMLInputEvent' is defined but never used.","React Hook useEffect has missing dependencies: 'mainAtt', 'mainDef', and 'rank'. Either include them or remove the dependency array.",["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [buddyId, history, matches]",{"range":"300","text":"301"},"Update the dependencies array to be: [history]",{"range":"302","text":"303"},"Update the dependencies array to be: [history, location.search]",{"range":"304","text":"305"},"Update the dependencies array to be: [mainAtt, mainDef, rank]",{"range":"306","text":"307"},[2213,2215],"[buddyId, history, matches]",[1367,1369],"[history]",[1512,1514],"[history, location.search]",[1964,1966],"[mainAtt, mainDef, rank]"]